################################################################################
##
## Filename: 	enetscope.txt
##
## Project:	VideoZip, a ZipCPU SoC supporting video functionality
##
## Purpose:	Describes how to connect a wishbone scope to the ethernet port
##		for debugging.
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
##
## Copyright (C) 2017-2019, Gisselquist Technology, LLC
##
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of  the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
##
## License:	GPL, v3, as defined and found on www.gnu.org,
##		http://www.gnu.org/licenses/gpl.html
##
##
################################################################################
##
##
@PREFIX=enetscope
@NADDR=2
@DEVID=NETSCOPE
@DEPENDS=ETHERNET_ACCESS
@MAIN.PARAM=
`define	ENETRX_SCOPE
@TARGET=netp
@MAIN.DEFNS=
	wire	netp_dbg_trigger;
@MAIN.INSERT=
   @$(+.MAIN.INSERT)

	assign	netp_dbg_trigger = netp_debug[31];
@INT.ENETSCOPE.WIRE=@$(PREFIX)_int
@INT.ENETSCOPE.PIC=buspic
@LOG_CAPTURE_SIZE=9
@SYNCHRONOUS=0
@DATA_CLOCK=netp_debug_clk
@$DATA_FREQ=125000000
@$CLOCK_PERIOD=1000000000/@$(DATA_FREQ)
@$BUSCLOCK_PERIOD=1000000000/@SLAVE.BUS.CLOCK.FREQUENCY
@$MXDELAY=(@$(DATA_FREQ) > @$(SLAVE.BUS.CLOCK.FREQUENCY)) ? @$(CLOCK_PERIOD) : @$(BUSCLOCK_PERIOD)
@INCLUDEFILE=wbscope.txt
@BDEF.DEFNS=
  @(+.BDEF.DEFNS)
@XDC.INSERT=
#//
#// @$(DEVID): WB-Bus to scope data
#// Chosen maximum delay is @$(MXDELAY)
set_max_delay -datapath_only -from [get_cells -hier -filter {NAME=~ *@$(PREFIX)i*/*br_*}]            -to [get_cells -hier -filter {NAME=~*@$(PREFIX)i*/*q_*}] @$(MXDELAY)
set_max_delay -datapath_only -from [get_cells -hier -filter {NAME=~ *@$(PREFIX)i*/*br_*}]            -to [get_cells -hier -filter {NAME=~*@$(PREFIX)i*/*dr_*}] @$(MXDELAY)
#//
#// @$(DEVID): Scope data to WB-bus clock
set_max_delay -datapath_only -from [get_cells -hier -filter {NAME=~ *@$(PREFIX)i/r_reset_complete*}] -to [get_cells -hier -filter {NAME=~*@$(PREFIX)i*/q_*}] @$(MXDELAY)
set_max_delay -datapath_only -from [get_cells -hier -filter {NAME=~ *@$(PREFIX)i/dr_*}]              -to [get_cells -hier -filter {NAME=~*@$(PREFIX)i*/q_*}] @$(MXDELAY)
#//
set_max_delay -datapath_only -from [get_cells -hier -filter {NAME=~ *@$(PREFIX)i*/*waddr*}]          -to [get_cells -hier -filter {NAME=~*@$(PREFIX)i*/*this_addr*}] @$(MXDELAY)
set_max_delay -datapath_only -from [get_cells -hier -filter {NAME=~ *netctrl/*}]                     -to [get_cells -hier -filter {NAME=~*@$(PREFIX)i*/o_bus_data*}] @$(MXDELAY)
