////////////////////////////////////////////////////////////////////////////////
//
// Filename: 	xhdmiiclk.v
//
// Project:	VideoZip, a ZipCPU SoC supporting video functionality
//
// Purpose:	
//
// Creator:	Dan Gisselquist, Ph.D.
//		Gisselquist Technology, LLC
//
////////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) 2015-2019, Gisselquist Technology, LLC
//
// This program is free software (firmware): you can redistribute it and/or
// modify it under the terms of  the GNU General Public License as published
// by the Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// This program is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
// target there if the PDF file isn't present.)  If not, see
// <http://www.gnu.org/licenses/> for a copy.
//
// License:	GPL, v3, as defined and found on www.gnu.org,
//		http://www.gnu.org/licenses/gpl.html
//
//
////////////////////////////////////////////////////////////////////////////////
//
//
module	xhdmiiclk(i_hdmi_clk, i_ce, o_hs_clk, o_hdmi_logic_clk);
	parameter	PHASE_BIAS = 0.0;
	input	wire		i_hdmi_clk;
	input	wire		i_ce;
	output	wire	[1:0]	o_hs_clk;
	output	wire		o_hdmi_logic_clk;
	// output	wire		o_locked;

	wire	clock_feedback, clock_feedback_buffered;

	PLLE2_BASE #(
		.CLKFBOUT_MULT(10),
		.CLKFBOUT_PHASE(0.0),
		//
		.CLKIN1_PERIOD(4),	// in ns, thus max pixel clk of 250MHz
		//
		.CLKOUT0_PHASE(0.0 + PHASE_BIAS),
		//
		.CLKOUT1_PHASE(180.0 + PHASE_BIAS),
		//
		.CLKOUT2_DIVIDE(10),
		.CLKOUT2_PHASE(0.0 + PHASE_BIAS/10.0)
		) genclki(
		.CLKIN1(i_hdmi_clk),
		.CLKOUT0(o_hs_clk[1]),
		.CLKOUT1(o_hs_clk[0]),
		.CLKOUT2(o_hdmi_logic_clk),
		.PWRDWN(!i_ce),
		.RST(!i_ce),
		.CLKFBOUT(clock_feedback),
		.CLKFBIN(clock_feedback_buffered)
		);

	// The buffer is necessary so that the output then compensates for the
	// feedback associated with the buffer
	BUFG	hdmi_feedback_buffer(.I(clock_feedback),
			.O(clock_feedback_buffered));

endmodule
