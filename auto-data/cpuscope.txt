################################################################################
##
## Filename: 	cpuscope.txt
##
## Project:	VideoZip, a ZipCPU SoC supporting video functionality
##
## Purpose:	Describes how to integrate a wishbone scope, focused on the
##		ZipCPU, into our platform.  This is good for debugging things
##	if the CPU itself isn't working.
##
##	If you include this within your design, you should also find an
##	associated piece of software to decode the signals produced by this
##	scope within the repository (check in the sw/host directory).
##
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
##
## Copyright (C) 2017-2019, Gisselquist Technology, LLC
##
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of  the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
##
## License:	GPL, v3, as defined and found on www.gnu.org,
##		http://www.gnu.org/licenses/gpl.html
##
##
################################################################################
##
##
@PREFIX=zipscope
@DEVID=ZIPSCOPE
@NADDR=2
@SLAVE.TYPE=OTHER
@SLAVE.BUS=wb
@DEPENDS=INCLUDE_ZIPCPU
@REGS.NOTE=// ZipCPU Scope
@REGS.N=2
@REGS.0=0 R_@$(DEVID) @$(DEVID)
@REGS.1=1 R_@$(DEVID)D @$(DEVID)D
@MAIN.INSERT=
	wbscope #(.LGMEM(9), .SYNCHRONOUS(1)) @$(PREFIX)i(
		i_clk, 1'b1, zip_trigger, zip_debug,
		i_clk, wb_cyc,
		  ((wb_stb)&&(@$(PREFIX)_sel)), wb_we, wb_addr[0], wb_data,
		@$(PREFIX)_ack, @$(PREFIX)_stall, @$(PREFIX)_data,
		@$(PREFIX)_int);
@INT.ZIPSCOPE.WIRE=@$(PREFIX)_int
@INT.ZIPSCOPE.PIC=buspic
@BDEF.DEFN=
#ifndef WBSCOPE_H
#define WBSCOPE_H

#define WBSCOPE_NO_RESET        0x80000000u
#define WBSCOPE_TRIGGER         (WBSCOPE_NO_RESET|0x08000000u)
#define WBSCOPE_MANUAL          (WBSCOPE_TRIGGER)
#define WBSCOPE_DISABLE         0x04000000u

typedef struct WBSCOPE_S {
        unsigned s_ctrl, s_data;
} WBSCOPE;
#endif
@BDEF.IOTYPE=WBSCOPE
@BDEF.IONAME=_@$(PREFIX)
@BDEF.OSDEF=_BOARD_HAS_@$(DEVID)
@BDEF.OSVAL=static volatile @$(BDEF.IOTYPE) *const @$(BDEF.IONAME) = ((@$(BDEF.IOTYPE) *)@$[0x%08x](REGBASE));
